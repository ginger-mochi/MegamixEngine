/// stateCodecGlobals()
/// Serializes/deserializes all global variables.
/// This code was autogenerated by addSerialization.py
/// Do not edit this code manually.

if (global.stateCodecEncode)
{
    stateCodecPrimitiveEncode(global.BounceXVel);
    stateCodecIDArrayEncode(global.MeBounce);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.aliveBosses);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.alwaysHealth);
    stateCodecPrimitiveEncode(global.ammo);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.beginHubOnRoomBegin);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.beginStageOnRoomBegin);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.bolts);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.borderLockBottom);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.borderLockLeft);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.borderLockRight);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.borderLockTop);
    stateCodecDSEncode(global.borderlist, ds_type_list);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.bossTextShown);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.cachedXView);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.cachedYView);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.castleStagesBeaten);
    stateCodecPrimitiveEncode(global.characterSelected);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.chargeBar);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.chargeUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.checkpoint);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.checkpointNotification);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.checkpointX);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.checkpointY);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.coloredTextOverlaysBlue);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.coloredTextOverlaysGreen);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.coloredTextOverlaysOpacity);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.coloredTextOverlaysRed);
    stateCodecPrimitiveEncode(global.consoleColour);
    stateCodecPrimitiveEncode(global.consoleMessage);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.consoleN);
    stateCodecPrimitiveEncode(global.consoleTimer);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.converter);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.coop);
    stateCodecPrimitiveEncode(global.costumeRequirement);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.currentsavefile);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.damage);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.damagePopup);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.deathEffect);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.debugEnabled);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.debugSkipStageMode);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.decrementLivesOnRoomEnd);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.defaultLives);
    stateCodecPrimitiveEncode(global.difficulty);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableChargeUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableConverter);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableDropUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableShotUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableSkullAmulet);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.disableSturdyHelmet);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.dropUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.eTanks);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.eddieisdead);
    stateCodecPrimitiveEncode(global.elementsCollected);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.enableCharge);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.enableSlide);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.endStageOnRoomEnd);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.energyElements);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.energySaver);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.escapeBehavior);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.eventArgs);
    stateCodecPrimitiveEncode(global.factionStance);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.familyFriendlyText);
    stateCodecPrimitiveEncode(global.firstBackground);
    stateCodecPrimitiveEncode(global.firstObject);
    stateCodecPrimitiveEncode(global.firstSprite);
    stateCodecPrimitiveEncode(global.flag);
    stateCodecIDArrayEncode(global.flagParent);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.flashTimer);
    stateCodecPrimitiveEncode(global.font);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.freeMovement);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.frozen);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.gameSpeed);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.gameTimer);
    stateCodecDSEncode(global.gravityLiftBulletMap, ds_type_map);
    stateCodecDSEncode(global.gravityLiftLockJumpMap, ds_type_map);
    stateCodecDSEncode(global.gravityLiftLockMap, ds_type_map);
    stateCodecDSEncode(global.gravityLiftXSpeedMap, ds_type_map);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.gunshot);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.hasTeleported);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.healthEffect);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.inGame);
    stateCodecPrimitiveEncode(global.infiniteEnergy);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.isInvincible);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.jumpSound);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.keyCoinCollected);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.keyCoinTotal);
    stateCodecPrimitiveEncode(global.keyDown);
    stateCodecPrimitiveEncode(global.keyDownPressed);
    stateCodecPrimitiveEncode(global.keyJump);
    stateCodecPrimitiveEncode(global.keyJumpPressed);
    stateCodecPrimitiveEncode(global.keyLeft);
    stateCodecPrimitiveEncode(global.keyLeftPressed);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.keyNumber);
    stateCodecPrimitiveEncode(global.keyPause);
    stateCodecPrimitiveEncode(global.keyPausePressed);
    stateCodecPrimitiveEncode(global.keyRight);
    stateCodecPrimitiveEncode(global.keyRightPressed);
    stateCodecPrimitiveEncode(global.keyShoot);
    stateCodecPrimitiveEncode(global.keyShootPressed);
    stateCodecPrimitiveEncode(global.keySlide);
    stateCodecPrimitiveEncode(global.keySlidePressed);
    stateCodecPrimitiveEncode(global.keyUp);
    stateCodecPrimitiveEncode(global.keyUpPressed);
    stateCodecPrimitiveEncode(global.keyWeaponSwitchLeft);
    stateCodecPrimitiveEncode(global.keyWeaponSwitchLeftPressed);
    stateCodecPrimitiveEncode(global.keyWeaponSwitchRight);
    stateCodecPrimitiveEncode(global.keyWeaponSwitchRightPressed);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lastTeleporterX);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lastTeleporterY);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelLoop);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelLoopEnd);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelLoopStart);
    stateCodecPrimitiveEncode(global.levelReward);
    stateCodecPrimitiveEncode(global.levelRunInvalidReason);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelRunValid);
    stateCodecPrimitiveEncode(global.levelSong);
    stateCodecPrimitiveEncode(global.levelSongType);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelTrackNumber);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.levelVolume);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.leverPropagated);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.livesEnabled);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.livesRemaining);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lockAvailable);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lockBuster);
    stateCodecPrimitiveEncode(global.lockPoolAvailable);
    stateCodecPrimitiveEncode(global.lockPoolLockCount);
    stateCodecPrimitiveEncode(global.lockPoolLockTable);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lockPoolN);
    stateCodecPrimitiveEncode(global.lockPoolTombstone);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.lockTransition);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.mTanks);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxBolts);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxETanks);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxLives);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxMTanks);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxPlayerCount);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.maxWTanks);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.mmColor);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.musicsound);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.netPrevOpcode);
    buffer_write(global.stateCodecBuffer, buffer_string, global.newLine);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.nextRoom);
    stateCodecPrimitiveEncode(global.outlineCol);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.pickupGraphics);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.playerCount);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.playerCountInitialized);
    stateCodecPrimitiveEncode(global.playerFrozen);
    stateCodecPrimitiveEncode(global.playerHealth);
    stateCodecPrimitiveEncode(global.playerLock);
    stateCodecPrimitiveEncode(global.playerSprite);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.playerSpriteMax);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.playingcustommusic);
    stateCodecPrimitiveEncode(global.prevXView);
    stateCodecPrimitiveEncode(global.prevYView);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.previousRoom);
    stateCodecPrimitiveEncode(global.primaryCol);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.quadHeight);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.quadMarginBottom);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.quadMarginTop);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.quadWidth);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.queuePaused);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.respawnAllowed);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.respawnAnimation);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.respawnDonateThreshold);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.respawnGravityAngle);
    stateCodecPrimitiveEncode(global.respawnTime);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.respawnTimeBoss);
    stateCodecPrimitiveEncode(global.respawnTimer);
    stateCodecPrimitiveEncode(global.roomReturn);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.roomReturnIsHub);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.roomReturnIsStage);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.roomTimer);
    buffer_write(global.stateCodecBuffer, buffer_string, global.saveFile);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.screenHeight);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.screenWidth);
    stateCodecPrimitiveEncode(global.secondaryCol);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sectionBottom);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sectionLeft);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sectionRight);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sectionTop);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.shakeFactorX);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.shakeFactorY);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.shakeTimer);
    stateCodecIDArrayEncode(global.sheepBlockStack);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sheepBlockStack_n);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.shotUpgrade);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showColoredTextOverlays);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showColoredTextOverlaysBlue);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showColoredTextOverlaysGreen);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showColoredTextOverlaysOpacity);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showColoredTextOverlaysRed);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showControllerOverlay);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showFPS);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.showMovingText);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.skullAmulet);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.songMemory);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.soundvolume);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.stageStartRoom);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.sturdyHelmet);
    stateCodecPrimitiveEncode(global.superArmInterface);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.switchingSections);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.telTelWeather);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.teleportSound);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.teleportX);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.teleportY);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.tempSongData);
    stateCodecPrimitiveEncode(global.tileLayers);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.tileLayersN);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.timeStopped);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.totalWeapons);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.wTanks);
    stateCodecPrimitiveEncode(global.warningLevel);
    buffer_write(global.stateCodecBuffer, buffer_f32, global.waveManWarpLock);
    stateCodecPrimitiveEncode(global.weapon);
    stateCodecPrimitiveEncode(global.weaponHotbar);
    stateCodecDSEncode(global.weaponID, ds_type_map);
    stateCodecPrimitiveEncode(global.weaponIcon);
    stateCodecPrimitiveEncode(global.weaponLocked);
    stateCodecPrimitiveEncode(global.weaponName);
    stateCodecPrimitiveEncode(global.weaponObject);
    stateCodecPrimitiveEncode(global.weaponPrimaryColor);
    stateCodecPrimitiveEncode(global.weaponSecondaryColor);
}
else
{
    global.BounceXVel = stateCodecPrimitiveDecode();
    global.MeBounce = stateCodecIDArrayDecode();
    global.aliveBosses = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.alwaysHealth = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.ammo = stateCodecPrimitiveDecode();
    global.beginHubOnRoomBegin = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.beginStageOnRoomBegin = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.bolts = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.borderLockBottom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.borderLockLeft = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.borderLockRight = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.borderLockTop = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.borderlist = stateCodecDSDecode(ds_type_list);
    global.bossTextShown = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.cachedXView = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.cachedYView = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.castleStagesBeaten = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.characterSelected = stateCodecPrimitiveDecode();
    global.chargeBar = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.chargeUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.checkpoint = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.checkpointNotification = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.checkpointX = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.checkpointY = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.coloredTextOverlaysBlue = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.coloredTextOverlaysGreen = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.coloredTextOverlaysOpacity = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.coloredTextOverlaysRed = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.consoleColour = stateCodecPrimitiveDecode();
    global.consoleMessage = stateCodecPrimitiveDecode();
    global.consoleN = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.consoleTimer = stateCodecPrimitiveDecode();
    global.converter = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.coop = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.costumeRequirement = stateCodecPrimitiveDecode();
    global.currentsavefile = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.damage = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.damagePopup = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.deathEffect = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.debugEnabled = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.debugSkipStageMode = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.decrementLivesOnRoomEnd = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.defaultLives = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.difficulty = stateCodecPrimitiveDecode();
    global.disableChargeUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.disableConverter = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.disableDropUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.disableShotUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.disableSkullAmulet = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.disableSturdyHelmet = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.dropUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.eTanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.eddieisdead = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.elementsCollected = stateCodecPrimitiveDecode();
    global.enableCharge = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.enableSlide = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.endStageOnRoomEnd = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.energyElements = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.energySaver = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.escapeBehavior = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.eventArgs = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.factionStance = stateCodecPrimitiveDecode();
    global.familyFriendlyText = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.firstBackground = stateCodecPrimitiveDecode();
    global.firstObject = stateCodecPrimitiveDecode();
    global.firstSprite = stateCodecPrimitiveDecode();
    global.flag = stateCodecPrimitiveDecode();
    global.flagParent = stateCodecIDArrayDecode();
    global.flashTimer = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.font = stateCodecPrimitiveDecode();
    global.freeMovement = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.frozen = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.gameSpeed = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.gameTimer = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.gravityLiftBulletMap = stateCodecDSDecode(ds_type_map);
    global.gravityLiftLockJumpMap = stateCodecDSDecode(ds_type_map);
    global.gravityLiftLockMap = stateCodecDSDecode(ds_type_map);
    global.gravityLiftXSpeedMap = stateCodecDSDecode(ds_type_map);
    global.gunshot = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.hasTeleported = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.healthEffect = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.inGame = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.infiniteEnergy = stateCodecPrimitiveDecode();
    global.isInvincible = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.jumpSound = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.keyCoinCollected = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.keyCoinTotal = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.keyDown = stateCodecPrimitiveDecode();
    global.keyDownPressed = stateCodecPrimitiveDecode();
    global.keyJump = stateCodecPrimitiveDecode();
    global.keyJumpPressed = stateCodecPrimitiveDecode();
    global.keyLeft = stateCodecPrimitiveDecode();
    global.keyLeftPressed = stateCodecPrimitiveDecode();
    global.keyNumber = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.keyPause = stateCodecPrimitiveDecode();
    global.keyPausePressed = stateCodecPrimitiveDecode();
    global.keyRight = stateCodecPrimitiveDecode();
    global.keyRightPressed = stateCodecPrimitiveDecode();
    global.keyShoot = stateCodecPrimitiveDecode();
    global.keyShootPressed = stateCodecPrimitiveDecode();
    global.keySlide = stateCodecPrimitiveDecode();
    global.keySlidePressed = stateCodecPrimitiveDecode();
    global.keyUp = stateCodecPrimitiveDecode();
    global.keyUpPressed = stateCodecPrimitiveDecode();
    global.keyWeaponSwitchLeft = stateCodecPrimitiveDecode();
    global.keyWeaponSwitchLeftPressed = stateCodecPrimitiveDecode();
    global.keyWeaponSwitchRight = stateCodecPrimitiveDecode();
    global.keyWeaponSwitchRightPressed = stateCodecPrimitiveDecode();
    global.lastTeleporterX = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.lastTeleporterY = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelLoop = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelLoopEnd = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelLoopStart = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelReward = stateCodecPrimitiveDecode();
    global.levelRunInvalidReason = stateCodecPrimitiveDecode();
    global.levelRunValid = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelSong = stateCodecPrimitiveDecode();
    global.levelSongType = stateCodecPrimitiveDecode();
    global.levelTrackNumber = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.levelVolume = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.leverPropagated = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.livesEnabled = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.livesRemaining = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.lockAvailable = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.lockBuster = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.lockPoolAvailable = stateCodecPrimitiveDecode();
    global.lockPoolLockCount = stateCodecPrimitiveDecode();
    global.lockPoolLockTable = stateCodecPrimitiveDecode();
    global.lockPoolN = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.lockPoolTombstone = stateCodecPrimitiveDecode();
    global.lockTransition = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.mTanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxBolts = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxETanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxLives = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxMTanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxPlayerCount = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.maxWTanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.mmColor = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.musicsound = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.netPrevOpcode = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.newLine = buffer_read(global.stateCodecBuffer, buffer_string);
    global.nextRoom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.outlineCol = stateCodecPrimitiveDecode();
    global.pickupGraphics = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.playerCount = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.playerCountInitialized = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.playerFrozen = stateCodecPrimitiveDecode();
    global.playerHealth = stateCodecPrimitiveDecode();
    global.playerLock = stateCodecPrimitiveDecode();
    global.playerSprite = stateCodecPrimitiveDecode();
    global.playerSpriteMax = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.playingcustommusic = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.prevXView = stateCodecPrimitiveDecode();
    global.prevYView = stateCodecPrimitiveDecode();
    global.previousRoom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.primaryCol = stateCodecPrimitiveDecode();
    global.quadHeight = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.quadMarginBottom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.quadMarginTop = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.quadWidth = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.queuePaused = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnAllowed = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnAnimation = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnDonateThreshold = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnGravityAngle = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnTime = stateCodecPrimitiveDecode();
    global.respawnTimeBoss = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.respawnTimer = stateCodecPrimitiveDecode();
    global.roomReturn = stateCodecPrimitiveDecode();
    global.roomReturnIsHub = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.roomReturnIsStage = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.roomTimer = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.saveFile = buffer_read(global.stateCodecBuffer, buffer_string);
    global.screenHeight = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.screenWidth = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.secondaryCol = stateCodecPrimitiveDecode();
    global.sectionBottom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.sectionLeft = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.sectionRight = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.sectionTop = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.shakeFactorX = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.shakeFactorY = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.shakeTimer = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.sheepBlockStack = stateCodecIDArrayDecode();
    global.sheepBlockStack_n = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.shotUpgrade = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showColoredTextOverlays = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showColoredTextOverlaysBlue = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showColoredTextOverlaysGreen = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showColoredTextOverlaysOpacity = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showColoredTextOverlaysRed = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showControllerOverlay = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showFPS = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.showMovingText = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.skullAmulet = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.songMemory = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.soundvolume = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.stageStartRoom = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.sturdyHelmet = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.superArmInterface = stateCodecPrimitiveDecode();
    global.switchingSections = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.telTelWeather = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.teleportSound = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.teleportX = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.teleportY = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.tempSongData = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.tileLayers = stateCodecPrimitiveDecode();
    global.tileLayersN = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.timeStopped = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.totalWeapons = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.wTanks = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.warningLevel = stateCodecPrimitiveDecode();
    global.waveManWarpLock = buffer_read(global.stateCodecBuffer, buffer_f32);
    global.weapon = stateCodecPrimitiveDecode();
    global.weaponHotbar = stateCodecPrimitiveDecode();
    global.weaponID = stateCodecDSDecode(ds_type_map);
    global.weaponIcon = stateCodecPrimitiveDecode();
    global.weaponLocked = stateCodecPrimitiveDecode();
    global.weaponName = stateCodecPrimitiveDecode();
    global.weaponObject = stateCodecPrimitiveDecode();
    global.weaponPrimaryColor = stateCodecPrimitiveDecode();
    global.weaponSecondaryColor = stateCodecPrimitiveDecode();
}
