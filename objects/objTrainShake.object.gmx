<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spTrainIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>prtCustomCamera</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    Causes the camera to shake up and down periodically,
    as in Charge Man's stage (mm5)
*/

//@cc vertical offset in each state
shakeVertical = makeArray(0, -1);

//@cc horizontal offset in each state
shakeHorizontal = makeArray(0, 0);

//@cc time to spend in each state
shakeTime = makeArray(72, 24);

//@cc should shift only tiles instead of everything?
onlyShiftTiles = true;


init = false;
timer = 0;
cachedShakeV = 0;
cachedShakeH = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tmpTimer = timer;
var i;
for (i = 0; i &lt; array_length_1d(shakeTime); i++)
{
    tmpTimer -= shakeTime[i];
    if (tmpTimer &lt;= 0)
    {
        cachedShakeV = -shakeVertical[i];
        cachedShakeH = -shakeHorizontal[i];
        if (!audio_is_playing(sfxTrainBump))
        {
            playSFX(sfxTrainBump);
        }
        break;
    }
}

if (!global.frozen &amp;&amp; !global.timeStopped)
{
    timer++;
    if (i == array_length_1d(shakeTime))
    {
        timer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Serialize instance variables.
/// This code was autogenerated by addSerialization.py

// Before editing manually, remove the following tag so that
// this event is not replaced when autogenerated again.

// @autogenerate

event_inherited();

if (global.stateCodecEncode)
{
    buffer_write(global.stateCodecBuffer, buffer_f32, cachedShakeH);
    buffer_write(global.stateCodecBuffer, buffer_f32, cachedShakeV);
    buffer_write(global.stateCodecBuffer, buffer_f32, init);
    buffer_write(global.stateCodecBuffer, buffer_f32, onlyShiftTiles);
    stateCodecPrimitiveEncode(shakeHorizontal);
    stateCodecPrimitiveEncode(shakeTime);
    stateCodecPrimitiveEncode(shakeVertical);
    buffer_write(global.stateCodecBuffer, buffer_f32, timer);
}
else
{
    cachedShakeH = buffer_read(global.stateCodecBuffer, buffer_f32);
    cachedShakeV = buffer_read(global.stateCodecBuffer, buffer_f32);
    init = buffer_read(global.stateCodecBuffer, buffer_f32);
    onlyShiftTiles = buffer_read(global.stateCodecBuffer, buffer_f32);
    shakeHorizontal = stateCodecPrimitiveDecode();
    shakeTime = stateCodecPrimitiveDecode();
    shakeVertical = stateCodecPrimitiveDecode();
    timer = buffer_read(global.stateCodecBuffer, buffer_f32);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// adjust camera
view_xview[0] += cachedShakeH;
view_yview[0] += cachedShakeV;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// [re]set camera for shift layer mode

if (onlyShiftTiles)
{
    d3d_set_projection_ortho(view_xview[0] - cachedShakeH, view_yview[0] - cachedShakeV, view_wview[0], view_hview[0], 0);
    view_xview[0] -= cachedShakeH;
    view_yview[0] -= cachedShakeV;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
